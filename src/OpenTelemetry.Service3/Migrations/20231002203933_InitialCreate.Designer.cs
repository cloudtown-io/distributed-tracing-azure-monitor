// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenTelemetry.Service3;

#nullable disable

namespace OpenTelemetry.Service3.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20231002203933_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpenTelemetry.Service3.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Number = "ORD-1"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            Number = "ORD-2"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            Number = "ORD-3"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            Number = "ORD-4"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            Number = "ORD-5"
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 5,
                            Number = "ORD-6"
                        });
                });

            modelBuilder.Entity("OpenTelemetry.Service3.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Item 1",
                            OrderId = 1,
                            Price = 10m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Item 2",
                            OrderId = 1,
                            Price = 20m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Item 3",
                            OrderId = 2,
                            Price = 30m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Item 1",
                            OrderId = 2,
                            Price = 10m,
                            Quantity = 21
                        },
                        new
                        {
                            Id = 5,
                            Name = "Item 3",
                            OrderId = 3,
                            Price = 30m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Item 34",
                            OrderId = 4,
                            Price = 0.5m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 7,
                            Name = "Item 21",
                            OrderId = 4,
                            Price = 23.5m,
                            Quantity = 143
                        },
                        new
                        {
                            Id = 8,
                            Name = "Item 1",
                            OrderId = 5,
                            Price = 10m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Item 1",
                            OrderId = 6,
                            Price = 10m,
                            Quantity = 21
                        },
                        new
                        {
                            Id = 10,
                            Name = "Item 3",
                            OrderId = 6,
                            Price = 30m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "Item 34",
                            OrderId = 6,
                            Price = 0.5m,
                            Quantity = 15
                        });
                });

            modelBuilder.Entity("OpenTelemetry.Service3.OrderItem", b =>
                {
                    b.HasOne("OpenTelemetry.Service3.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OpenTelemetry.Service3.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
